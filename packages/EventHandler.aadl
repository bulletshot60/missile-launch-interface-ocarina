package EventHandler
public
	with DataTypes;
	
	subprogram toggle_event_subroutine
		features
			toggle_up: in parameter DataTypes::boolean;
			toggle_down: in parameter DataTypes::boolean;
			time_in: in parameter DataTypes::integer;
			enabled: out parameter DataTypes::boolean;
			time_out: out parameter DataTypes::integer;	
	end toggle_event_subroutine;
	
	subprogram button_event_subroutine
		features
			button_up: in parameter DataTypes::boolean;
			button_down: in parameter DataTypes::boolean;
			time_in: in parameter DataTypes::integer;
			enabled: out parameter DataTypes::boolean;
			time_out: out parameter DataTypes::integer;
	end button_event_subroutine;
	
	--////////////////////////////////////////////////////////////////
	--================================================================
	--\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
	
	thread toggle_event_thread
		features
			toggle_up: in event data port DataTypes::boolean;
			toggle_down: in event data port DataTypes::boolean;
			time_in: in data port DataTypes::integer;
			enabled: out data port DataTypes::boolean;
			time_out: out data port DataTypes::integer;
		properties
			Dispatch_Protocol => Sporadic;
			Period => 500ms;
			Compute_Execution_Time => 1ms..500ms;
	end toggle_event_thread;
	
	thread implementation toggle_event_thread.impl
		calls M: {
			subroutine: subprogram toggle_event_subroutine;
		};
		connections
			event1: parameter toggle_up->subroutine.toggle_up;
			event2: parameter toggle_down->subroutine.toggle_down;
			event3: parameter time_in->subroutine.time_in;
			output1: parameter subroutine.enabled->enabled;
			output2: parameter subroutine.time_out->time_out;
	end toggle_event_thread.impl;
	
	thread button_event_thread
		features
			button_up: in event data port DataTypes::boolean;
			button_down: in event data port DataTypes::boolean;
			time_in: in data port DataTypes::integer;
			enabled: out data port DataTypes::boolean;
			time_out: out data port DataTypes::integer;
		properties
			Dispatch_Protocol => Sporadic;
			Period => 500ms;
			Compute_Execution_Time => 1ms..500ms;
	end button_event_thread;
	
	thread implementation button_event_thread.impl
		calls M: {
			subroutine: subprogram button_event_subroutine;
		};
		connections
			event1: parameter button_up->subroutine.button_up;
			event2: parameter button_down->subroutine.button_down;
			event3: parameter time_in->subroutine.time_in;
			output1: parameter subroutine.enabled->enabled;
			output2: parameter subroutine.time_out->time_out;
	end button_event_thread.impl;
	
	--////////////////////////////////////////////////////////////////
	--================================================================
	--\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
	
	process toggle_event_handler
		features
			toggle_up: in event data port DataTypes::boolean;
			toggle_down: in event data port DataTypes::boolean;
			time_in: in data port DataTypes::integer;
			enabled: out data port DataTypes::boolean;
			time_out: out data port DataTypes::integer;
	end toggle_event_handler;
	
	process implementation toggle_event_handler.impl
		subcomponents
			toggle_event_thread: thread toggle_event_thread.impl;
		connections
			event1: port toggle_up->toggle_event_thread.toggle_up;
			event2: port toggle_down->toggle_event_thread.toggle_down;
			event3: port time_in->toggle_event_thread.time_in;
			output1: port toggle_event_thread.enabled->enabled;
			output2: port toggle_event_thread.time_out->time_out;
	end toggle_event_handler.impl;
	
	process button_event_handler
		features
			button_up: in event data port DataTypes::boolean;
			button_down: in event data port DataTypes::boolean;
			time_in: in data port DataTypes::integer;
			enabled: out data port DataTypes::boolean;
			time_out: out data port DataTypes::integer;
	end button_event_handler;
	
	process implementation button_event_handler.impl
		subcomponents
			button_event_thread: thread button_event_thread.impl;
		connections
			event1: port button_up->button_event_thread.button_up;
			event2: port button_down->button_event_thread.button_down;
			event3: port time_in->button_event_thread.time_in;
			output1: port button_event_thread.enabled->enabled;
			output2: port button_event_thread.time_out->time_out;
	end button_event_handler.impl;
	
end EventHandler;