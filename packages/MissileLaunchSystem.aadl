package MissileLaunchInterfaceSystem
public
	with EventHandler, TimerSystem, LaunchDecider, Devices, DataTypes;
	
	processor timing_cpu
	end timing_cpu;
	
	processor event_cpu
	end event_cpu;
	
	processor launch_decider_cpu
	end launch_decider_cpu;
	
	system missile_launch_interface
	end missile_launch_interface;
	
	system implementation missile_launch_interface.impl
		subcomponents
			left_button_handler: process EventHandler::button_event_handler.impl;
			right_button_handler: process EventHandler::button_event_handler.impl;
			left_toggle_handler: process EventHandler::toggle_event_handler.impl;
			right_toggle_handler: process EventHandler::toggle_event_handler.impl;
			
			launch_decider_process: process LaunchDecider::launch_decider_process.impl;
			
			clock_process: process TimerSystem::clock_process.impl;
			
			device_reader_process: process Devices::device_reader.impl;
			
			timing_cpu: processor timing_cpu;
			event_cpu: processor event_cpu;
			launch_decider_cpu: processor launch_decider_cpu; 
		connections
			connection1: port device_reader_process.fire->clock_process.time_interrupt;
			
			connection2: port device_reader_process.left_toggle_toggled_up->left_toggle_handler.toggle_up;
			connection3: port device_reader_process.left_toggle_toggled_down->left_toggle_handler.toggle_down;
			connection4: port clock_process.time_out->left_toggle_handler.time_in;
			
			connection5: port device_reader_process.right_toggle_toggled_up->right_toggle_handler.toggle_up;
			connection6: port device_reader_process.right_toggle_toggled_down->right_toggle_handler.toggle_down;
			connection7: port clock_process.time_out->right_toggle_handler.time_in;
			
			connection8: port device_reader_process.left_button_pressed->left_button_handler.button_down;
			connection9: port device_reader_process.left_button_released->left_button_handler.button_up;
			connection10: port clock_process.time_out->left_button_handler.time_in;
			
			connection11: port device_reader_process.right_button_pressed->right_button_handler.button_down;
			connection12: port device_reader_process.right_button_released->right_button_handler.button_up;
			connection13: port clock_process.time_out->right_button_handler.time_in;  
			
			connection14: port left_toggle_handler.enabled->launch_decider_process.left_toggle_enabled;
			connection15: port left_toggle_handler.time_out->launch_decider_process.left_toggle_enabled_at;
			
			connection16: port right_toggle_handler.enabled->launch_decider_process.right_toggle_enabled;
			connection17: port right_toggle_handler.time_out->launch_decider_process.right_toggle_enabled_at;
			
			connection18: port left_button_handler.enabled->launch_decider_process.left_button_enabled;
			connection19: port left_button_handler.time_out->launch_decider_process.left_button_enabled_at;
			
			connection20: port right_button_handler.enabled->launch_decider_process.right_button_enabled;
			connection21: port right_button_handler.time_out->launch_decider_process.right_button_enabled_at;
		properties
			actual_processor_binding => (reference (timing_cpu)) applies to clock_process;
			actual_processor_binding => (reference (timing_cpu)) applies to device_reader_process; 
			actual_processor_binding => (reference (event_cpu)) applies to left_button_handler;
			actual_processor_binding => (reference (event_cpu)) applies to right_button_handler;
			actual_processor_binding => (reference (event_cpu)) applies to  left_toggle_handler;
			actual_processor_binding => (reference (event_cpu)) applies to  right_toggle_handler;
			actual_processor_binding => (reference (launch_decider_cpu)) applies to launch_decider_process;
	end missile_launch_interface.impl;
	
end MissileLaunchInterfaceSystem;