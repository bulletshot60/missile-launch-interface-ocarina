package TimerSystem
public
	with DataTypes;

	subprogram clock_thread_subroutine
		features
			time_interrupt: in parameter DataTypes::integer;
			time_out: out parameter DataTypes::integer;
	end clock_thread_subroutine;
		
	--////////////////////////////////////////////////////////////////
	--================================================================
	--\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\

	thread clock_thread
		features
			time_interrupt: in event data port DataTypes::integer;
			time_out: out event data port DataTypes::integer;
		properties
			Dispatch_Protocol => Periodic;
			Period => 1ms;
			Compute_Execution_Time => 0ms..1ms;
	end clock_thread;
	
	thread implementation clock_thread.impl
		calls M: {
			subroutine: subprogram clock_thread_subroutine;
		};
		connections
			connection1: parameter time_interrupt->subroutine.time_interrupt;
			connection2: parameter subroutine.time_out->time_out;
	end clock_thread.impl;
	
	--////////////////////////////////////////////////////////////////
	--================================================================
	--\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
	
	process clock_process
		features
			time_interrupt: in event data port DataTypes::integer;
			time_out: out event data port DataTypes::integer;
	end clock_process;
	
	process implementation clock_process.impl
		subcomponents
			clock_thread: thread clock_thread.impl;
		connections
			event1: port time_interrupt->clock_thread.time_interrupt;
			output1: port clock_thread.time_out->time_out;
	end clock_process.impl;
		
end TimerSystem;